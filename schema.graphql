"""An object with an ID"""
interface Node {
  """The id of the object."""
  id: ID!
}

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!
  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!
  """When paginating backwards, the cursor to continue."""
  startCursor: String
  """When paginating forwards, the cursor to continue."""
  endCursor: String
}


type Alumni implements Node {
	id: ID!
	source: String!
	url: String
	sex: String
	first_name: String
	last_name: String
	class: Int
	company: [String]
	school: String
	email: [String]
	phone: [String] 
}

type Edge {
	node: Alumni
	cursor: String
}

type Page {
	edges: [Edge]
	pageInfo: PageInfo!
}

type Source implements Node {
	id: ID!
	key: String
	enabled: Boolean
}

type Query {
	node(id: ID!): Node
	search(
		first: Int,
		after: String,
		source: String,
		first_name: String,
		last_name: String,
		class: String,
		company: String
	): Page
	source: [Source]
}

input Credentials {
	username: String
	password: String
}

type Mutation {
	addSource(source: String, credentials: Credentials): [Source]
}
